<#@ assembly name="$(TemplateGeneratorLibFolder)TemplateCodeGenerator.dll" #>
<#@ import namespace="TemplateCodeGenerator.SchemaRead" #>

namespace <#=reader.NameHandler.DataModelNamespace #> {
#pragma warning disable S1125 // Boolean literals should not be redundant
#pragma warning disable S2589 // Boolean literals should not be redundant
#nullable enable
<#
foreach(Table tbl in tables.All){
#>
	/// <summary>
	/// A class which Extends the <#= tbl.Name#> <#=(tbl.IsView)?"view":"table"#>.
	/// </summary>
	public partial class <#=reader.NameHandler.ToDataModelName(tbl.ClassName) #> : IEquatable<<#=reader.NameHandler.ToDataModelName(tbl.ClassName) #>> {

		public bool Equals(<#=reader.NameHandler.ToDataModelName(tbl.ClassName) #>? other) {
				return other != null &&
<#	foreach(Column col in tbl.Columns)
	{
		if(col.IsNullable && col.RequiresNullableIndicator) {
#>
					DataCompare.CheckEqual<<#=col.PropertyType #>>(this.<#=col.PropertyName #>, other.<#=col.PropertyName #>) &&
<#} else {#>
					DataCompare.CheckEqual(this.<#=col.PropertyName #>, other.<#=col.PropertyName #>) &&
<#}}#>					true;
		}
		
	}
<#}#>
#nullable restore
#pragma warning restore S1125 // Boolean literals should not be redundant
#pragma warning restore S2589 // Boolean literals should not be redundant
}